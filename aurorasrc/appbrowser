term.setTextColor(colors.white)
term.setBackgroundColor(colors.black)
term.clear()
if #fs.list("apps") < 1 then
  term.setCursorPos(2, 2)
  printError("No apps installed!")
  sleep(2)
  return false
end

local scrollY = 0
local selected = 1

local apps, appNames, appNameToID

local function rebuildAppList()
  apps = {}
  appNames = {}
  appNameToID = {}
  for i, v in pairs(fs.list("apps")) do
    apps[v] = aFile.unserializeFile(fs.combine(fs.combine("apps", v), "info"))
    if apps[v] then
      local prettyName = apps[v].sName and apps[v].sName .. " (" .. v .. ")" or v
      table.insert(appNames, prettyName)
      appNameToID[prettyName] = v
    end
  end
  table.sort(appNames)
end
rebuildAppList()

local function redraw()
  if not aurora.config.debug then
    term.current().setVisible(false)
  end
  local termw, termh = term.getSize()
  term.setTextColor(colors.black)
  term.setBackgroundColor(colors.white)
  term.clear()
  term.setCursorPos(1, 1)
  term.setBackgroundColor(colors.lightGray)
  term.clearLine()
  aUtil.cwrite("Apps", 1)
  term.setCursorPos(1, termh)
  term.clearLine()
  term.write("Q: quit, D: delete")
  term.setBackgroundColor(colors.white)
  local num = 2 - scrollY
  for i, name in ipairs(appNames) do
    if num > 1 and num < termh then
      term.setCursorPos(1, num)
      if selected == i then
        term.write("> ")
      else
        term.write("  ")
      end
      term.write(name)
    end
    num = num + 1
    if num > termh - 1 then
      break
    end
  end
  if not aurora.config.debug then
    term.current().setVisible(true)
  end
end

while true do
  redraw()
  -- handle events
  local ev = {os.pullEvent()}
  local termw, termh = term.getSize()
  if ev[1] == "key" then
    if ev[2] == keys.q then
      return true
    elseif ev[2] == keys.d then
      term.clear()
      term.setCursorPos(2, 2)
      term.write("Delete "..appNames[selected].."? [yN]")
      local e, k = os.pullEvent("key")
      if k == keys.y then
        fs.delete(fs.combine("apps", appNameToID[ appNames[selected] ]))
        rebuildAppList()
      end
    elseif ev[2] == keys.up then
      selected = selected - 1
    elseif ev[2] == keys.down then
      selected = selected + 1
    elseif ev[2] == keys.enter then
      local ok, err = aUtil.doFile_env({app = {
        execPath = fs.combine("apps", appNameToID[ appNames[selected] ])
      }}, fs.combine(fs.combine("apps", appNameToID[ appNames[selected] ]), apps[ appNameToID[ appNames[selected] ] ].sExecute))
      if aurora.config.debug then
        sleep(2)
      end
    end
  end
  if #appNames < 1 then
    return false
  end
  -- fix cursor
  if selected > #appNames then
    selected = 1
  elseif selected < 1 then
    selected = #appNames
  end
  if selected < scrollY + 1 then
    scrollY = selected - 1
  elseif selected > scrollY + termh - 2 then
    scrollY = selected - termh + 2
  end
end